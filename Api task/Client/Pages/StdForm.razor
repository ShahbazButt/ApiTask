@page "/SForm"
@using Api_task.Shared;
@inject HttpClient Http
@inject NavigationManager nvm

<h3>Here is Student Form</h3>

<EditForm Model="@student" OnValidSubmit="@HandleOnSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>


    <label>
        Enter Std_Id :
        <InputNumber  @bind-Value="student.Id" />
    </label>
    <br>
     <label>
        Enter Std_Name :
        <InputText  @bind-Value="student.Name" />
    </label>
    <br>
    <label>
        Enter Roll_Number:
        <InputText @bind-Value="student.RollNumber" />
    </label>
    <label>
        Enter Marks:
        <InputText @bind-Value="student.Marks" />
    </label>
    <br>
    <button type="submit" >Submit</button>



</EditForm>

<p>@message</p>

<table>

    <thead>Id</thead>
    <thead>Name</thead>
    <thead>Roll</thead>


 @foreach(Student std  in students )
{
    <tr>
        <td>@std.Id</td>
        <td>@std.Name</td>
        <td>@std.RollNumber</td>
        <td>@std.Marks</td>
    </tr>
}
</table>



@code {

   


    List<Student> students = new List<Student>();
    string message = "";



    protected override async Task OnInitializedAsync()
    {

        students =  await Http.GetFromJsonAsync<List<Student>>("/pass");

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        students = await Http.GetFromJsonAsync<List<Student>>("/pass");

    }




    async void HandleOnSubmit()
    {

        var res = await Http.PostAsJsonAsync("/api/v1/Student", student);
        if(res.IsSuccessStatusCode)
        {

            message = res.ToString();

            
        }
        StateHasChanged();

    }


}
